version: '2.3'

services:
  mysql:
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Asia/Seoul
    ports: 
      - 3307:3306
  
  serving:
    image: docker.lomin.ai/ts-gpu-serving-dev:${TEXTSCOPE_VERSION}
    build:
      context: ./
      dockerfile: docker/development/Dockerfile.gpu_serving
      args:
        USER: ${USER}
        CUSTOMER: ${CUSTOMER}
        BUNDLE_PATH: ${BUNDLE_PATH}
        PYTHON_VERSION: ${PYTHON_VERSION}
        MODEL_TYPE: ${MODEL_TYPE}
        MODEL_SERVICE: ${MODEL_SERVICE}
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        BASE_PATH: ${BASE_PATH}
        LINUX_ENV_PATH: ${LINUX_ENV_PATH}
        DEMOMA_PATH: ${DEMOMA_PATH}
        SO_EXTENTION: ${SO_EXTENTION}
    ports: 
      - 5000:5000
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    #   - ./app/utils/bentoml_configuration.yml:/user/home/bentoml/bentoml.yml
    tty: true
    depends_on: 
      - mysql
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: [gpu]
    # BENTOML_CONFIG=/workspace/bentoml_textscope/assets/bentoml_configuration.yml bentoml serve-gunicorn . --port=5000
  
  serving_replica:
    image: docker.lomin.ai/ts-gpu-serving-dev:${TEXTSCOPE_VERSION}
    build:
      context: ./
      dockerfile: docker/development/Dockerfile.gpu_serving
      args:
        USER: ${USER}
        CUSTOMER: ${CUSTOMER}
        BUNDLE_PATH: ${BUNDLE_PATH}
        PYTHON_VERSION: ${PYTHON_VERSION}
        MODEL_TYPE: ${MODEL_TYPE}
        MODEL_SERVICE: ${MODEL_SERVICE}
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        BASE_PATH: ${BASE_PATH}
        LINUX_ENV_PATH: ${LINUX_ENV_PATH}
        DEMOMA_PATH: ${DEMOMA_PATH}
        SO_EXTENTION: ${SO_EXTENTION}
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    #   - ./app/utils/bentoml_configuration.yml:/user/home/bentoml/bentoml.yml
    tty: true
    depends_on: 
      - mysql
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['1']
            capabilities: [gpu]
    networks:
      our_net:
        ipv4_address: ${SERVING_REPLICA_IP_ADDR}
    # BENTOML_CONFIG=/workspace/bentoml_textscope/assets/bentoml_configuration.yml bentoml serve-gunicorn . --port=5000

  web:
    build:
      context: ./
      dockerfile: docker/production/Dockerfile.web
      args:
        USER: ${USER}
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        BASE_PATH: ${BASE_PATH}
        LINUX_ENV_PATH: ${LINUX_ENV_PATH}
        DEMOMA_PATH: ${DEMOMA_PATH}
        SO_EXTENTION: ${SO_EXTENTION}
    ports: 
      - 8000:8000
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    tty: true
    depends_on: 
      - mysql
    networks:
      our_net:
          ipv4_address: ${WEB_IP_ADDR}
    # command: python3 app/main.py

  pp:
    build:
      context: ./
      dockerfile: docker/production/Dockerfile.pp
      args:
        USER: ${USER}
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        BASE_PATH: ${BASE_PATH}
        LINUX_ENV_PATH: ${LINUX_ENV_PATH}
        DEMOMA_PATH: ${DEMOMA_PATH}
        SO_EXTENTION: ${SO_EXTENTION}
    ports: 
      - 8080:8080
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    tty: true
    depends_on: 
      - mysql
    networks:
      our_net:
          ipv4_address: ${PP_IP_ADDR}
    restart: unless-stopped
    # command: python pp_server/app/main.py

  wrapper:
    build:
      context: ./
      dockerfile: docker/production/Dockerfile.wrapper
      args:
        USER: ${USER}
        CUSTOMER: ${CUSTOMER}
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        BASE_PATH: ${BASE_PATH}
        LINUX_ENV_PATH: ${LINUX_ENV_PATH}
        DEMOMA_PATH: ${DEMOMA_PATH}
        SO_EXTENTION: ${SO_EXTENTION}
    ports: 
      - 8090:8090
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    tty: true
    networks:
      our_net:
          ipv4_address: ${WRAPPER_IP_ADDR}
    # command: python ${CUSTOMER}_wrapper/app/main.py

  nginx:
    ports:
      - "800:80"
      - "443:443"

  nginx-exporter:
    ports:
      - '9113:9113'

  gpu_telemetry:
    ports:
      - 9400:9400

  hardware_telemetry:
    ports:
      - 9100:9100

  prometheus:
    ports:
      - 9090:9090
    
  grafana:
    ports:
      - 3000:3000

  mysql-exporter:
    ports:
      - 9104:9104
    environment:
      - DATA_SOURCE_NAME=${MYSQL_ROOT_USER}:${MYSQL_PASSWORD}@(${MYSQL_IP_ADDR}:3306)/
    cap_add:
      - SYS_NICE

volumes: 
  prometheus_data: {}
  grafana_data: {}
  pgdata: {}
  mysqldata: {}

networks:
  our_net:
    ipam:
      config:
        - subnet: 182.20.0.0/24
