version: '2.3'

services:
  mysql:
    build:
      context: ./
      dockerfile: docker/production/Dockerfile.mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Asia/Seoul
    # ulimits:
    #   nofile:
    #     soft: "65536"
    #     hard: "65536"
    volumes:
      - ./database/my.cnf:/etc/mysql/my.cnf
    ports: 
      - 3307:3306
  
  serving:
    image: docker.lomin.ai/ts-gpu-serving-base:${TEXTSCOPE_BASE_IMAGE_VERSION}
    build:
      context: ./
      dockerfile: docker/base/Dockerfile.gpu_serving
      args:
        USER: ${USER}
        CUSTOMER: ${CUSTOMER}
        BUNDLE_PATH: ${BUNDLE_PATH}
        PYTHON_VERSION: ${PYTHON_VERSION}
        MODEL_SERVICE: ${MODEL_SERVICE}
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        BASE_PATH: ${BASE_PATH}
        LINUX_ENV_PATH: ${LINUX_ENV_PATH}
        DEMOMA_PATH: ${DEMOMA_PATH}
        SO_EXTENTION: ${SO_EXTENTION}
        PYTHON_VERSION: ${PYTHON_VERSION}
        TEXTSCOPE_BASE_IMAGE_VERSION: ${TEXTSCOPE_BASE_IMAGE_VERSION}
    ports: 
      - 5000:5000
    volumes:
      - ./:/workspace
    tty: true
    depends_on: 
      - mysql
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: [gpu]
    # BENTOML_CONFIG=/workspace/bentoml_textscope/assets/bentoml_configuration.yml bentoml serve-gunicorn . --port=5000
  
  # serving_replica:
  #   image: docker.lomin.ai/ts-gpu-serving-base:${TEXTSCOPE_BASE_IMAGE_VERSION}
  #   volumes:
  #     # - ./logs:/workspace/logs
  #     - ./:/workspace
  #   #   - ./app/utils/bentoml_configuration.yml:/user/home/bentoml/bentoml.yml
  #   tty: true
  #   depends_on: 
  #     - mysql
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #         - driver: nvidia
  #           device_ids: ['1']
  #           capabilities: [gpu]
  #   # BENTOML_CONFIG=/workspace/bentoml_textscope/assets/bentoml_configuration.yml bentoml serve-gunicorn . --port=5000

  web:
    image: docker.lomin.ai/ts-web-base:${TEXTSCOPE_BASE_IMAGE_VERSION}
    build:
      context: ./
      dockerfile: docker/base/Dockerfile.web
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        TEXTSCOPE_BASE_IMAGE_VERSION: ${TEXTSCOPE_BASE_IMAGE_VERSION}
    ports: 
      - 8000:8000
    volumes:
      - ./:/workspace
    tty: true
    depends_on: 
      - mysql
    networks:
      our_net:
          ipv4_address: ${WEB_IP_ADDR}
    command: python3 /workspace/app/main.py

  pp:
    image: docker.lomin.ai/ts-pp-base:${TEXTSCOPE_BASE_IMAGE_VERSION}
    build:
      context: ./
      dockerfile: docker/base/Dockerfile.pp
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        TEXTSCOPE_BASE_IMAGE_VERSION: ${TEXTSCOPE_BASE_IMAGE_VERSION}
    ports: 
      - 8080:8080
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    tty: true
    depends_on: 
      - mysql
    networks:
      our_net:
          ipv4_address: ${PP_IP_ADDR}
    restart: unless-stopped
    command: python3 /workspace/pp_server/pp_server/app/main.py

  wrapper:
    image: docker.lomin.ai/ts-wrapper-base:${TEXTSCOPE_BASE_IMAGE_VERSION}
    build:
      context: ./
      dockerfile: docker/base/Dockerfile.wrapper
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        TEXTSCOPE_BASE_IMAGE_VERSION: ${TEXTSCOPE_BASE_IMAGE_VERSION}
        CUSTOMER: ${CUSTOMER}
    ports: 
      - 8050:8090
    volumes:
      - ./logs:/workspace/logs
      - ./:/workspace
    tty: true
    working_dir: /workspace/${CUSTOMER}_wrapper
    environment: 
      - API_ENV=production
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    networks:
      our_net:
          ipv4_address: ${WRAPPER_IP_ADDR}
    command: python3 ${CUSTOMER}_wrapper/app/main.py

  # nginx:
  #   ports:
  #     - "800:80"
  #     - "443:443"
    
  nginx-exporter:
    ports:
      - '9113:9113'
    command:
      - -nginx.scrape-uri=http://${NGINX_IP_ADDR}:80//metrics

  gpu_telemetry:
    ports:
      - 9400:9400

  hardware_telemetry:
    ports:
      - 9100:9100

  prometheus:
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.env:/etc/prometheus/.env
      - prometheus_data:/prometheus

    
  grafana:
    ports:
      - 3000:3000

  mysql-exporter:
    ports:
      - 9104:9104
    environment:
      - DATA_SOURCE_NAME=${MYSQL_ROOT_USER}:${MYSQL_PASSWORD}@(${MYSQL_IP_ADDR}:3306)/
    cap_add:
      - SYS_NICE
