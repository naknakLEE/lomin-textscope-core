ARG UBUNTU_VERSION

FROM ubuntu:${UBUNTU_VERSION}

ARG BUILD_FOLDER_PATH
ARG CUSTOMER
ARG MAINTAINER
ARG POETRY_VERSION

LABEL maintainer=${MAINTAINER}

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
ENV PATH="/root/.local/bin:${PATH}"
ENV PYTHONPATH="$PYTHONPATH:/workspace"
ENV API_ENV="production"
ENV DOCKER_ENV=True

RUN apt-get -qq update && \
    apt-get -y -qq install locales && \
    locale-gen ko_KR.UTF-8

RUN DEBIAN_FRONTEND="noninteractive" apt-get -y -qq install \
    curl \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libmysqlclient-dev \
    python3-pip \
    python3-venv \
    tzdata

RUN DEBIAN_FRONTEND="noninteractive" apt-get -y -qq install poppler-utils

# RUN pip3 install --upgrade pip

RUN curl -sSL https://install.python-poetry.org | POETRY_VERSION=${POETRY_VERSION} python3 - && \
    echo "PATH=/root/.local/bin:$PATH" > /etc/environment && \
    poetry config virtualenvs.create false

COPY ./app/assets/ /workspace/app/assets/
COPY ./${BUILD_FOLDER_PATH}/${CUSTOMER}/web/ /workspace/
COPY ./${BUILD_FOLDER_PATH}/${CUSTOMER}/assets/textscope.json /workspace/assets/textscope.json
COPY ./.env.prod /workspace/.env

COPY ./requirements/web/pyproject.toml /workspace/
COPY ./requirements/web/poetry.lock /workspace/

WORKDIR /workspace
RUN poetry install --no-dev

RUN rm -rf /var/lib/apt/lists/* && \
    rm -rf /root/.cache && \
    rm -rf /usr/bin/gcc

RUN groupadd -r lomin -g 1000 && \
    useradd -u 1000 -r -g lomin -s /sbin/nologin -c "Docker image user" textscope

USER textscope