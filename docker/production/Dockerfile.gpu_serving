ARG UBUNTU_VERSION

FROM nvidia/cuda:11.1-cudnn8-runtime-ubuntu${UBUNTU_VERSION}

ARG PYTHON_VERSION
ARG MODEL_TYPE
ARG MODEL_SERVICE
ARG BASE_PATH
ARG LINUX_ENV_PATH
ARG DEMOMA_PATH
ARG SO_EXTENTION
ARG USER
ARG BUNDLE_PATH
ARG BENTOML_PACKAGE_PATH=/usr/local/lib/python${PYTHON_VERSION}/dist-packages/bentoml/frameworks
ARG APP_NAME=bentoml_textscope

ENV PYTHONPATH="$PYTHONPATH:/workspace"
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

RUN apt-get update && \
    apt-get install -y git  && \
    apt-get install wget && \
    apt-get -y install python3-pip && \
    DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata && \
    apt-get -y install libgl1-mesa-glx libglib2.0-0

RUN apt install -y libprotobuf-dev protobuf-compiler && \
    apt-get -y install cmake

RUN rm -rf /var/lib/apt/lists/*

WORKDIR /workspace
RUN git clone http://github.com/bentoml/bentoml && \
    cd bentoml && \
    pip3 install --upgrade pip && \
    pip3 install -r ./guides/quick-start/requirements.txt

RUN git clone https://github.com/Nuitka/Nuitka.git && \
    cd Nuitka && \
    python3 setup.py install

# for bento dockerization
WORKDIR /bin
RUN wget "http://stedolan.github.io/jq/download/linux64/jq" && \
    chmod 755 jq

RUN pip3 install torch==1.8.1+cu111 torchvision==0.9.1+cu111 -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html

COPY ./${APP_NAME} /workspace/${APP_NAME}
COPY ./assets/thales/ /workspace/assets/thales
COPY ./lovit /workspace/lovit
COPY ./.env /workspace/.env
COPY ./requirments/requirments-serving.txt /workspace/requirments-serving.txt

RUN pip3 install -r /workspace/requirments-serving.txt

WORKDIR /workspace/lovit
RUN python3 setup.py install && \
    rm -r /workspace/lovit

# AWS 이전 예정
# WORKDIR /workspace
# RUN python3 ${APP_NAME}/utils/azure_blob_container/download_blob_to_local.py && \
#     python3 ${APP_NAME}/generate_${MODEL_SERVICE}.py

WORKDIR /workspace/${APP_NAME}
RUN python3 bentoml_textscope/generate_document_model_service.py 

WORKDIR /usr/local/lib/python${PYTHON_VERSION}/dist-packages/bentoml/frameworks/
RUN cp /workspace/${APP_NAME}/assets/modified_bentoml_file/pytorch.py /usr/local/lib/python${PYTHON_VERSION}/dist-packages/bentoml/frameworks/pytorch.py && \
    python3 -m nuitka --module pytorch.py && \
    rm -r pytorch.py pytorch.build __pycache__ && \
    ${LINUX_ENV_PATH} -v:${DEMOMA_PATH} -f:100 --dfp pytorch.${SO_EXTENTION} pytorch.${SO_EXTENTION} && \
    cp /workspace/${APP_NAME}/assets/modified_bentoml_file/loader.py /usr/local/lib/python${PYTHON_VERSION}/dist-packages/bentoml/saved_bundle/loader.py && \
    cp /workspace/${APP_NAME}/assets/modified_bentoml_file/pip_pkg.py /usr/local/lib/python${PYTHON_VERSION}/dist-packages/bentoml/saved_bundle/pip_pkg.py

WORKDIR ${BUNDLE_PATH}
RUN python3 /workspace/bentoml_textscope/bentoml_textscope/encrytion.py && \
    python3 -m nuitka --module ${APP_NAME} --include-package=${APP_NAME} && \
    ${LINUX_ENV_PATH} -v:${DEMOMA_PATH} -f:100 --dfp ${APP_NAME}.${SO_EXTENTION} ${APP_NAME}.${SO_EXTENTION}

RUN rm -r /workspace/bentoml /workspace/assets /workspace/Nuitka && \
    rm -r /workspace/${APP_NAME}/${APP_NAME} /workspace/requirments-serving.txt && \
    rm -r ${BUNDLE_PATH}/${APP_NAME} ${BUNDLE_PATH}/${APP_NAME}.build 

# root 권한 제거
# RUN groupadd -r ${USER} && useradd --no-log-init -r -g ${USER} ${USER}
# USER ${USER}

# 바로 서비스 실행하도록
# ENTRYPOINT ["BENTOML_CONFIG=/workspace/bentoml_textscope/assets/bentoml_configuration.yml", "bentoml", "serve-gunicorn", "."]
