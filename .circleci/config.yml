version: 2.1

orbs:
  jq: circleci/jq@2.2.0
  python: circleci/python@1.0.0
  slack: circleci/slack@4.9.3
  
executors:
  lomin-dev:
    machine: true
    resource_class: lomin/1

parameters:
  BSN_CODE:
    type: string
    default: ""

jobs:
  run-application:
    executor: lomin-dev    
    steps:
      - jq/install    
      - checkout
      - run:
          name: Install shyaml
          command: pip install shyaml
      # - slack/notify:
      #     event: fail
      #     template: basic_fail_1
      # - slack/notify:
      #     event: pass
      #     template: success_tagged_deploy_1      
      - run:
          name: Git submoudle update
          command: git submodule update --init --recursive
      - run: 
          name: Generate .env file
          command: echo "$ENV_NEW" | base64 --decode > .env
      - run:
          name: Import BSN_CODE and Setting BASH_ENV
          command: |
            BSN_CODE=<< pipeline.parameters.BSN_CODE >>
            if [ -z "$BSN_CODE" ]; then
              PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | awk -F/ '{print $7}')
              PR_TITLE=$(curl -s -H "Authorization: Bearer $IW_GITHUB_TOKEN" https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER | jq '.title' -r)
              echo "Pull request title is: $PR_TITLE"
              BSN_CODE=$(echo $PR_TITLE | cut -d '/' -f1)         
            fi
            echo "BSN_CODE is: $BSN_CODE"
            echo "export BSN_CODE='$BSN_CODE'">> $BASH_ENV
            cp $BASH_ENV bash.env
      - run:
          name: Setting project env
          command: |
            bash circleci/set_env.sh $BSN_CODE
      - run:                
          name: Execute docker-build.sh
          command: |
            bash circleci/docker-build.sh $BSN_CODE
      - run:
          name: Execute docker-run.sh
          command: |
            bash circleci/docker-run.sh $BSN_CODE
      - run:
          when: on_fail
          name: Docker compose down & Clean directory
          command: |
            docker-compose down
            sudo rm -rf /home/lomin/Circleci/application
      # - slack/notify:
      #     custom: |
      #       {
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "fields": [
      #               {
      #                 "type": "plain_text",
      #                 "text": "*이루의 노션 연동 성공!*",
      #                 "emoji": true
      #               }
      #             ]
      #           }
      #         ]
      #       }
      #     event: always                                          
  code-test:
    executor: lomin-dev 
    steps:
      - run:
          name: Run Test
          command: |
            source bash.env
            docker exec --user 1001 ${BSN_CODE}-web /bin/sh -c "pytest /workspace/tests --junitxml=/workspace/test_results/junit.xml"
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results
          destination: v0.1.0
      - run:
          when: on_fail
          name: Docker compose down & Clean directory
          command: |
            docker-compose down
            sudo rm -rf /home/lomin/Circleci/application                      
  export-evaluator:
    executor: lomin-dev 
    steps:  
      - run:
          name: Execute Evaluator
          command: |
            source bash.env
            bash circleci/run_eval_scrp.sh $BSN_CODE
      - run:
          when: on_fail
          name: Docker compose down & Clean directory
          command: |
            docker-compose down
            sudo rm -rf /home/lomin/Circleci/application     
  deploy-image:
    executor: lomin-dev 
    steps:  
      - run:
          name: Generate .so file
          command: |
            source bash.env
            bash circleci/deploy.sh $BSN_CODE
      - run:
          name: Apply thales
          command: |
            sh assets/apply-thales-remote.sh
      - run:
          name: Docker prod build
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --parallel
      - run:
          name: Export docker images
          command: |
            sh assets/save-image-to-local.sh && mv build/ /home/lomin/Circleci/deploy/bsn-2211-kbcard
      - run:
          when: always
          name: Docker compose down & Clean directory
          command: |
            docker-compose down
            sudo rm -rf /home/lomin/Circleci/application                 

workflows:
  develop-work: 
    jobs:             
      - run-application:  
          filters:
            branches:
              only: /^(feature|release)\/.*/
          context:
            - GITHUB_CREDS
            - slack
      - code-test:
          requires:
            - run-application        
          filters:
            branches:
              only: /^(feature|release)\/.*/                         
      - export-evaluator:
          requires:
            - code-test
          filters:
            branches:
              only: /^(feature|release)\/.*/
      - deploy-image:
          requires:
            - export-evaluator
          filters:
            branches:
              only: /^(feature|release)\/.*/              
    # finally:                         
    #   - shut-down:
    #       filters:
    #         branches:
    #           only: /^(feature|release)\/.*/


      # - code-test:
      #     requires:
      #       - run-application        
      #     filters:
      #       branches:
      #         only: /^(feature|release)\/.*/                         
      # - export-evaluator:
      #     requires:
      #       - code-test
      #     filters:
      #       branches:
      #         only: /^(feature|release)\/.*/                      