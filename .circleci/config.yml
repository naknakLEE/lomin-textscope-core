version: 2.1

orbs:
  jq: circleci/jq@2.2.0
  python: circleci/python@1.0.0

executors:
  lomin-dev:
    machine: true
    resource_class: lomin/1

jobs:
  run-application:
    executor: lomin-dev    
    steps:
      - jq/install    
      - checkout
      - run: 
          name: Generate .env file
          command: echo "$ENV_NEW" | base64 --decode > .env
      - run:    
          name: Import BSN_CODE and Setting BASH_ENV
          command: |
            PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | awk -F/ '{print $7}')
            PR_TITLE=$(curl -s -H "Authorization: Bearer $IW_GITHUB_TOKEN" https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER | jq '.title' -r)
            echo "Pull request title is: $PR_TITLE"
            BSN_CODE=$(echo $PR_TITLE | cut -d '/' -f1)
            echo "BSN_CODE is: $BSN_CODE"
            echo "export BSN_CODE='$BSN_CODE'">> $BASH_ENV
            cp $BASH_ENV bash.env     
      - run:
          name: Setting project env
          command: |
            bash circleci/set_env.sh $BSN_CODE
      - run:                
          name: Execute docker-build.sh
          command: |
            bash circleci/docker-build.sh $BSN_CODE
      - run:
          name: Execute docker-run.sh
          command: |
            bash circleci/docker-run.sh
      - persist_to_workspace:
          root: .
          paths:
            - docker-compose.yml
            - docker-compose.dev.yml     
            - bash.env                       
  code-test:
    executor: lomin-dev    
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Test
          command: |
            docker exec web /bin/sh -c "pytest /workspace/tests -m unit --junitxml=/workspace/test_results/junit.xml"
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results
          destination: v0.1.0
      - run:
          name: Docker compose down
          command: |
            docker-compose down
          when: on_fail             
  export-evaluator:
    executor: lomin-dev 
    steps:
      - attach_workspace:
          at: .    
      - run:
          name: Execute Evaluator
          command: |
            bash circleci/run_eval_scrp.sh
workflows:
  feature-develop-PR: 
    jobs:             
      - run-application:      
          filters:
            branches:
              only: /feature\/.*/
          context:
            - GITHUB_CREDS
      - code-test:
          requires:
            - run-application        
          filters:
            branches:
              only: /feature\/.*/                         
      - export-evaluator:
          requires:
            - code-test
          filters:
            branches:
              only: /feature\/.*/                      