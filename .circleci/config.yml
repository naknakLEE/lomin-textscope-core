version: 2.1

orbs:
  python: circleci/python@1.0.0

executors:
  lomin-dev:
    machine: true
    resource_class: lomin/1
jobs:
  run-application:
    executor: lomin-dev    
    steps:
      - checkout
      - run: 
          name: Generate .env file
          command: echo "$ENV_NEW" | base64 --decode > .env
      - run:    
          name: Import BSN_CODE and Setting BASH_ENV
          command: |
            PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | awk -F/ '{print $7}')
            PR_TITLE=$(curl -s -H 'Authorization: Bearer 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' https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER | jq '.title' -r)
            echo "Pull request title is: $PR_TITLE"
            BSN_CODE=$(echo $PR_TITLE | cut -d '/' -f1)
            echo "BSN_CODE is: $BSN_CODE"
            echo "export BSN_CODE='$BSN_CODE'">> $BASH_ENV            
            echo "BSN_CODE=$BSN_CODE" | tee -a .env          
            bash circleci/build.sh $BSN_CODE
      - run:                
          name: Execute prepare.sh
          command: |
            bash circleci/prepare.sh $BSN_CODE
      - run:
          name: Execute run.sh
          command: |
            bash circleci/run.sh $BSN_CODE                            
  docker-run:
    executor: lomin-dev    
    steps:
      - run:    
          name: Excute run.sh
          command: |
            bash circleci/run.sh
  # code-test:
  #   machine: true
  #   resource_class: lomin/1    
  #   steps:
  #     - run:
  #         name: code test
  #         command: |
  #           echo "==========> Start Code Test";
  #           sh circleci/test.sh
  #           echo "==========> Finish Code Test"               
  export-evaluator:
    executor: lomin-dev 
    steps:
      - run:
          name: Execute Evaluator
          command: |
            bash circleci/run_eval_scrp.sh
workflows:
  feature-develop-PR: 
    jobs:          
      # - set-env-var:
      #     filters:
      #       branches:
      #         only: /feature\/.*/      
      - docker-build:   
          # requires:
          #   - set-env-var   
          filters:
            branches:
              only: /feature\/.*/    
      - docker-run:
          requires:
            - docker-build   
          filters:
            branches:
              only: /feature\/.*/
      - export-evaluator:
          requires:
            - docker-run   
          filters:
            branches:
              only: /feature\/.*/              
      # - code-test:
      #     requires:
      #       - docker-run
      #     filters:
      #       branches:
      #         only: /feature\/.*/            