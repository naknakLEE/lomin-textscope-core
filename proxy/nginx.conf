user nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {                     
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # upstream docker-nginx {
    #     # wrapper server ip addr
    #     server 182.20.0.22:8090;
    # }
    server {
        # image file is big
        client_max_body_size 30M;
        listen 80;
        server_name localhost;
        
        location / {
            return 301 https://localhost:8950$request_uri;
        }
        # location / {
        #     proxy_pass         http://docker-nginx;
        #     proxy_redirect     off;
        #     proxy_set_header   Host $host;
        #     proxy_set_header   X-Real-IP $remote_addr;
        #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;          
        # }

        # location /metrics {
        #     stub_status;
        #     # nginx exporter ip addr
        #     allow 182.20.0.23;
        #     deny all;
        # }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost; # 지정한 서버인증서에 포함(지원)된 도메인
        # error_page 497 https://$server_name:8050$request_uri;
        ssl_certificate /etc/nginx/certs/nginx-certificate.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        # image file is big
        client_max_body_size 30M;
        location / {
            proxy_pass         http://localhost:8950;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;          
        }

        location /metrics {
            stub_status;
            # nginx exporter ip addr
            allow 182.20.0.23;
            deny all;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
                                                
    sendfile        on;                                                                         
    keepalive_timeout  65;                                                                      
    include /etc/nginx/conf.d/*.conf;           
}
