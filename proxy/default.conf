server {
    listen       80;
    server_name  localhost;

    location /wrapper/api {                            #0 http://0.0.0.0:80/wrapper/* 정규식에 맞는 url로 요청이 들어오면
        rewrite  ^/wrapper/api/(.*) /$1 break;         #1-2 실제 접근하려는 url중 /wrapper를 지우고
        proxy_pass http://textscope-wrapper:8090;      #1-3 http://textscope-wrapper:8090으로 보낸다

        proxy_http_version 1.1;                        #2-1 권장 설정
        proxy_set_header Host $host;                   #2-2 권장 설정
        proxy_set_header x-forwarded-for $remote_addr; #2-3 nginx가 textscope-wrapper:8090에 요청을 하지만, 실제 누가 했는지(어디서 왔는지)를 ip 적어둠
        proxy_set_header Accept-Encoding "";           #2-4 gzip사용시 sub_filter 동장안함
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        sub_filter /static/ /wrapper/api/static/;
        sub_filter /openapi.json /wrapper/api/openapi.json;

        sub_filter_once off;
        sub_filter_types *;

        add_header Cache-Control "public";             #3-1 캐시 사용 가능 설정 (cache-control 옵션) -> 응답 헤더에 캐시 사용 가능 정보 추가
        expires 1d;                                    #3-2 캐시 만료 기간 설정 (cache-control 옵션) -> 웅답 헤더에 캐시 만료 날짜 정보 추가 (day=d, month=M, year=y)
        access_log true;                               #4 로그 남김
    }

    location /grafana {
        rewrite  ^/grafana/(.*) /$1 break;
        proxy_pass http://textscope-grafana:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header x-forwarded-for $remote_addr;
        add_header Cache-Control "public";
        expires 1d;
        access_log true;
    }

    location /pgadmin {
        proxy_set_header X-Script-Name /pgadmin;
        proxy_set_header Host $host;
        proxy_pass http://textscope-pgadmin:80;
        proxy_redirect off;
    }

    location /minio {
        rewrite  ^/minio/(.*) /$1 break;
        proxy_pass http://textscope-minio:9000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header x-forwarded-for $remote_addr;
        add_header Cache-Control "public";
        expires 1d;
        access_log true;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}