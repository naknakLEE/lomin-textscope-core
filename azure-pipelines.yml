# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- azure-pipeline

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-20.04
    steps:
    - task: DownloadSecureFile@1
      name: security
      displayName: 'Download .env'
      inputs:
        secureFile: '.env'
    - script: |
          echo Download $(security.secureFilePath) to the trusted CA directory...
          sudo chown root:root $(security.secureFilePath)
          sudo chmod a+r $(security.secureFilePath)
          sudo mv $(security.secureFilePath) .
          echo $(pwd)
    - script: |
        docker login textscopeRegistry.azurecr.io --username textscopeRegistry --password O8Jy+aZOtRRGG0+n6D4L6N+Iop71EIuU
      displayName: 'Login textscope azure container repository'
    - task: InstallSSHKey@0
      displayName: 'Install an SSH key'
      inputs:
        knownHostsEntry: 'SHA256:uQQZzJocI8jw3J7lhyaYCKkpstc=|WIGmnyxih3oUBSnv87LRdogHgUY= sw.lee@lomin.ai'
        sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDvbXOPSFaT9X8ShfitD0mYtwqMXq1xa9JVL8RRwGul3MWb7BvK3Zu7ZSEQsVn16KaVzXun8v7/F7VhUNEEb2tyma4j66y/DTUeyfEoDsYYdHTtEfYiShROmVIY6sKrklOJmEwnqcdMeWo0GHFKczO1DB5lLaUbwAJUUB8RrR8ujXTK2vGdIadyfAP8qEc4GDhwBUU6az8wrDM4I1XiIHnEJjjFM0DVDKHOBG2iABUemGiE/ms1ayjxkpVeV7bhCnHw4qVRVEUWM+gz5ow50c0l0+koIOutnhHNzmcpN7Te8w4H7Z/DtebSq5ADSj1l4XvZ4HFOntPbcoiGA6EvOAL0MNfyZkccJBCPXEvAHPDuyoUnqrUJyLaz52T8Jd9lqL2vxkrP02xjEuM8J5E6CqqI4bACz0R0aiA/QPQN4vv92oAWT+v8FpstW8CpthR2mORTvGim8SPb4uH6L8D3HcSSmgG/vun1d8P70zGNhc/AnDRqRU1mZ7Y+XAJVYglJAmk= sw.lee@lomin.ai'
        sshKeySecureFile: 'id_rsa'
    - script: |
        git clone git@ssh.dev.azure.com:v3/textscope/Textscope/lovit
      displayName: 'Download submodule'
    # - task: Docker@2
    #   displayName: Build an serving image
    #   inputs:
    #     containerRegistryrepository: textscopeRegistry
    #     command: build
    #     dockerfile: './Dockerfile.bentoml'
    #     # containerRegistry: textscopeRegistry
    #     tags: |
    #       ts-serving-0.0.1
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: textscopeRegistry.azurecr.io/ts-web
        dockerfile: './Dockerfile.nginx'
        # containerRegistry: textscopeRegistry
        tags: |
          0.0.1
    - script: |
          pip install pytest pytest-azurepipelines
          pip install pytest-cov
          pip install fastapi[all]
          pip install sqlalchemy
          pip install prometheusrock
          pip install python-jose
          pip install passlib
          pip install loguru
          pip install psycopg2-binary
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml tests
      displayName: 'pytest'
    # - script: |
    #       mv app/main.py ./main.py
    #       python -m nuitka --module app --include-package=app
    #       python -m nuitka main.py
    #   displayName: 'convert python -> c using nuitka'
    # - script: |
    #       docker-compose up -d
    #   displayName: 'run docker-compose'


  # ./main.bin
  # - stage: Testing
  #   displayName: Testing web app
  #   jobs:
  #   - job: Build
  #     displayName: Build
  #     pool:
  #       vmImage: ubuntu-latest
  #     steps:

  # - stage: Convert from python to c


  # - task: PublishBuildArtifacts@1


  