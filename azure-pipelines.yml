# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- azure-pipeline

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-20.04
    steps:
    - task: DownloadSecureFile@1
      name: security
      displayName: 'Download .env'
      inputs:
        secureFile: '.env'
    - script: |
          echo Download $(security.secureFilePath) to the trusted CA directory...
          sudo chown root:root $(security.secureFilePath)
          sudo chmod a+r $(security.secureFilePath)
          sudo mv $(security.secureFilePath) .
          echo $(pwd)
    - task: InstallSSHKey@0
      displayName: 'Install an SSH key'
      inputs:
        knownHostsEntry: 'SHA256:AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
        sshPublicKey: '$(myPubKey)'
        sshKeySecureFile: 'id_rsa'
    - script: |
        git submodule init
        git submodule update
      displayName: 'Download submodule'
    - task: Docker@2
      displayName: Build an serving image
      inputs:
        containerRegistryrepository: textscopeRegistry
        command: build
        dockerfile: './Dockerfile.bentoml'
        # containerRegistry: textscopeRegistry
        tags: |
          ts-serving-0.0.1
    - task: Docker@2
      displayName: Build an web image
      inputs:
        containerRegistryrepository: textscopeRegistry
        command: build
        dockerfile: './Dockerfile.fastapi'
        # containerRegistry: textscopeRegistry
        tags: |
          ts-web-0.0.1
    - script: |
          pip install pytest pytest-azurepipelines
          pip install pytest-cov
          pip install fastapi[all]
          pip install sqlalchemy
          pip install prometheusrock
          pip install python-jose
          pip install passlib
          pip install loguru
          pip install psycopg2-binary
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml tests
      displayName: 'pytest'
    - script: |
          mv app/main.py ./main.py
          python -m nuitka --module app --include-package=app
          python -m nuitka main.py
      displayName: 'convert python -> c using nuitka'
    - script: |
          docker-compose up -d
      displayName: 'run docker-compose'


  # ./main.bin
  # - stage: Testing
  #   displayName: Testing web app
  #   jobs:
  #   - job: Build
  #     displayName: Build
  #     pool:
  #       vmImage: ubuntu-latest
  #     steps:

  # - stage: Convert from python to c


  # - task: PublishBuildArtifacts@1


  